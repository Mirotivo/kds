@{
  ViewData["Title"] = "Settings";
}

<div class="container" id="categoriesManager">
    <h1>Categories</h1>

    <!-- Create a form for adding a new category -->
    <form v-on:submit.prevent="addCategory">
        <input v-model="newCategoryName" type="text" placeholder="New Category Name" required>
        <button type="submit">Add Category</button>
    </form>

    <!-- Display a list of categories -->
    <ul>
        <li v-for="category in categories" :key="category.id">
            {{ category.name }}
            <button v-on:click="editCategory(category)">Edit</button>
            <button v-on:click="deleteCategory(category.id)">Delete</button>
        </li>
    </ul>

    <!-- Edit category form -->
    <div v-if="editingCategory">
        <h2>Edit Category</h2>
        <input v-model="editingCategoryName" type="text" required>
        <button v-on:click="updateCategory(editingCategory.id)">Save</button>
    </div>
</div>

@section Scripts {
    <script>
        new Vue({
            el: '#categoriesManager',
            data: {
                categories: [],
                newCategoryName: '',
                editingCategory: null,
                editingCategoryName: '',
            },
            created() {
                this.fetchCategories();
            },
            methods: {
                // Fetch categories from the API
                fetchCategories() {
                    fetch('/api/categories')
                        .then(response => response.json())
                        .then(data => {
                            this.categories = data;
                        });
                },
                // Add a new category
                addCategory() {
                    fetch('/api/categories', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ name: this.newCategoryName }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            this.categories.push(data);
                            this.newCategoryName = '';
                        });
                },
                // Edit a category
                editCategory(category) {
                    this.editingCategory = category;
                    this.editingCategoryName = category.name;
                },
                // Update an edited category
                updateCategory(categoryId) {
                    fetch(`/api/categories/${categoryId}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ name: this.editingCategoryName }),
                    })
                        .then(response => response.json())
                        .then(data => {
                            const index = this.categories.findIndex(category => category.id === categoryId);
                            if (index !== -1) {
                                this.categories[index] = data;
                            }
                            this.editingCategory = null;
                            this.editingCategoryName = '';
                        });
                },
                // Delete a category
                deleteCategory(categoryId) {
                    if (confirm('Are you sure you want to delete this category?')) {
                        fetch(`/api/categories/${categoryId}`, {
                            method: 'DELETE',
                        })
                            .then(() => {
                                this.categories = this.categories.filter(category => category.id !== categoryId);
                            });
                    }
                },
            },
        });
    </script>
}
